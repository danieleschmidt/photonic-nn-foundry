{
  "name": "Photonic Neural Network Foundry Development Environment",
  "dockerComposeFile": "docker-compose.yml",
  "service": "devcontainer",
  "workspaceFolder": "/workspace",
  "shutdownAction": "stopCompose",
  
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "installOhMyZsh": true,
      "upgradePackages": true,
      "username": "vscode",
      "uid": "1000",
      "gid": "1000"
    },
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11",
      "installTools": true,
      "optimize": true
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "18",
      "nodeGypDependencies": true,
      "installYarnUsingApt": true
    },
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest",
      "enableNonRootDocker": true,
      "moby": true
    },
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest",
      "ppa": true
    }
  },
  
  "customizations": {
    "vscode": {
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.linting.flake8Enabled": true,
        "python.linting.mypyEnabled": true,
        "python.formatting.provider": "black",
        "python.formatting.blackArgs": ["--line-length=88"],
        "python.sortImports.args": ["--profile", "black"],
        "python.terminal.activateEnvironment": true,
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.pytestArgs": ["tests"],
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true
        },
        "files.exclude": {
          "**/__pycache__": true,
          "**/*.pyc": true,
          "**/htmlcov": true,
          "**/.coverage": true,
          "**/.pytest_cache": true
        },
        "terminal.integrated.shell.linux": "/usr/bin/zsh",
        "git.autofetch": true,
        "git.enableSmartCommit": true,
        "docker.enableDockerComposeLanguageService": true
      },
      
      "extensions": [
        "ms-python.python",
        "ms-python.pylint",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-python.mypy-type-checker",
        "ms-vscode.vscode-json",
        "ms-azuretools.vscode-docker",
        "eamodio.gitlens",
        "github.vscode-pull-request-github",
        "ms-vscode.makefile-tools",
        "redhat.vscode-yaml",
        "ms-vscode.vscode-markdown",
        "DavidAnson.vscode-markdownlint",
        "streetsidesoftware.code-spell-checker",
        "ms-python.pytest",
        "njpwerner.autodocstring",
        "ms-toolsai.jupyter",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "ms-toolsai.vscode-jupyter-slideshow",
        "ms-vscode-remote.remote-containers"
      ]
    }
  },
  
  "forwardPorts": [
    8000,
    8080,
    8888,
    9090
  ],
  
  "portsAttributes": {
    "8000": {
      "label": "Application Server",
      "onAutoForward": "notify"
    },
    "8080": {
      "label": "Alternative Web Server",
      "onAutoForward": "ignore"
    },
    "8888": {
      "label": "Jupyter Lab",
      "onAutoForward": "openPreview"
    },
    "9090": {
      "label": "Metrics/Prometheus",
      "onAutoForward": "ignore"
    }
  },
  
  "postCreateCommand": "bash .devcontainer/post-create.sh",
  "postStartCommand": "bash .devcontainer/post-start.sh",
  
  "remoteUser": "vscode",
  "containerUser": "vscode",
  
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
    "source=${localWorkspaceFolder}/.devcontainer/bashrc,target=/home/vscode/.bashrc,type=bind",
    "source=${localWorkspaceFolder}/.devcontainer/zshrc,target=/home/vscode/.zshrc,type=bind"
  ],
  
  "containerEnv": {
    "PYTHONPATH": "/workspace/src",
    "DEVELOPMENT_MODE": "true",
    "LOG_LEVEL": "DEBUG"
  },
  
  "init": true,
  "privileged": false,
  "capAdd": ["SYS_PTRACE"],
  "securityOpt": ["seccomp=unconfined"]
}