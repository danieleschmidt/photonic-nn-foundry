# Photonic Neural Network Foundry - Environment Configuration
# ===========================================================
# Copy this file to .env and customize for your environment

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application Environment
APP_ENV=development
DEBUG=true
LOG_LEVEL=INFO

# Application Name and Version
APP_NAME=photonic-nn-foundry
APP_VERSION=1.0.0

# =============================================================================
# PHOTONIC FOUNDRY SPECIFIC SETTINGS
# =============================================================================

# Default PDK (Process Design Kit)
PHOTONIC_PDK=skywater130
PHOTONIC_WAVELENGTH=1550

# Simulation Parameters
SIMULATION_BACKEND=optical_sim
SIMULATION_PRECISION=high
ENABLE_NOISE_MODEL=true

# Transpiler Configuration
TRANSPILER_TARGET=photonic_mac
TRANSPILER_OPTIMIZATION_LEVEL=O2
ENABLE_PIPELINE_OPTIMIZATION=true

# =============================================================================
# PYTORCH AND ML CONFIGURATION
# =============================================================================

# PyTorch Settings
TORCH_BACKEND=cpu
CUDA_VISIBLE_DEVICES=0
TORCH_NUM_THREADS=4

# Model Configuration
DEFAULT_MODEL_PATH=./models
MODEL_CACHE_SIZE=1000

# Training Configuration
TRAINING_BATCH_SIZE=32
TRAINING_EPOCHS=100
LEARNING_RATE=0.001

# =============================================================================
# DEVELOPMENT AND TESTING
# =============================================================================

# Testing Configuration
TEST_MODE=false
TEST_DATABASE_URL=sqlite:///test.db
PYTEST_WORKERS=auto
COVERAGE_THRESHOLD=80

# Development Tools
ENABLE_PROFILING=false
PROFILING_OUTPUT_DIR=./profiling
ENABLE_BENCHMARKING=false

# =============================================================================
# CONTAINER AND ORCHESTRATION
# =============================================================================

# Docker Configuration
DOCKER_REGISTRY=ghcr.io/danieleschmidt
DOCKER_TAG=latest
DOCKER_BUILDKIT=1

# Container Resources
CONTAINER_MEMORY_LIMIT=8g
CONTAINER_CPU_LIMIT=4
CONTAINER_GPU_ENABLED=false

# Kubernetes (if applicable)
KUBERNETES_NAMESPACE=photonic-foundry
KUBERNETES_SERVICE_ACCOUNT=default

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================

# Logging Configuration
LOG_FORMAT=json
LOG_FILE_PATH=./logs/app.log
LOG_MAX_SIZE=100MB
LOG_BACKUP_COUNT=5

# Metrics and Monitoring
ENABLE_METRICS=true
METRICS_PORT=9090
METRICS_PATH=/metrics

# Distributed Tracing
JAEGER_ENDPOINT=http://localhost:14268/api/traces
JAEGER_SERVICE_NAME=photonic-foundry
ENABLE_TRACING=false

# Health Checks
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10

# =============================================================================
# EXTERNAL SERVICES AND APIS
# =============================================================================

# Database Configuration (if needed)
DATABASE_URL=sqlite:///photonic_foundry.db
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20

# Redis Configuration (for caching)
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_SSL=false

# Object Storage (for model artifacts)
S3_BUCKET=photonic-foundry-models
S3_REGION=us-west-2
S3_ACCESS_KEY_ID=
S3_SECRET_ACCESS_KEY=

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Authentication
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this
JWT_EXPIRATION_HOURS=24
API_KEY=your-api-key-here

# Encryption
ENCRYPTION_KEY=your-encryption-key-32-chars-long
ENABLE_ENCRYPTION_AT_REST=false

# CORS Configuration
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_ALLOW_CREDENTIALS=true

# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_BURST=20

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Cache Configuration
CACHE_TTL=3600
CACHE_MAX_SIZE=1000
ENABLE_MEMORY_CACHE=true

# Optimization Settings
ENABLE_PARALLEL_PROCESSING=true
MAX_PARALLEL_WORKERS=4
MEMORY_LIMIT_PER_WORKER=2g

# Compilation Cache
ENABLE_COMPILATION_CACHE=true
COMPILATION_CACHE_SIZE=100
COMPILATION_CACHE_TTL=86400

# =============================================================================
# NETWORKING AND CONNECTIVITY
# =============================================================================

# Server Configuration
HOST=localhost
PORT=8000
WORKERS=4

# Proxy Configuration
HTTP_PROXY=
HTTPS_PROXY=
NO_PROXY=localhost,127.0.0.1

# SSL/TLS Configuration
SSL_ENABLED=false
SSL_CERT_PATH=
SSL_KEY_PATH=

# =============================================================================
# DEVELOPMENT WORKFLOW
# =============================================================================

# Git Configuration
GIT_COMMIT_TEMPLATE_ENABLED=true
PRE_COMMIT_ENABLED=true

# IDE Integration
VSCODE_SETTINGS_SYNC=true
JUPYTER_ENABLED=true
JUPYTER_PORT=8888

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Experimental Features
ENABLE_EXPERIMENTAL_FEATURES=false
ENABLE_QUANTUM_SIMULATION=false
ENABLE_NEUROMORPHIC_MODE=false

# Beta Features
ENABLE_ADVANCED_OPTIMIZATIONS=false
ENABLE_DISTRIBUTED_SIMULATION=false

# =============================================================================
# CLOUD PROVIDER SPECIFIC (AWS)
# =============================================================================

# AWS Configuration
AWS_REGION=us-west-2
AWS_PROFILE=default
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# AWS ECS Configuration
ECS_CLUSTER=photonic-foundry-cluster
ECS_SERVICE=photonic-foundry-service
ECS_TASK_DEFINITION=photonic-foundry-task

# AWS ECR Configuration
ECR_REGISTRY=123456789012.dkr.ecr.us-west-2.amazonaws.com
ECR_REPOSITORY=photonic-foundry

# =============================================================================
# CLOUD PROVIDER SPECIFIC (GCP)
# =============================================================================

# Google Cloud Configuration
GOOGLE_CLOUD_PROJECT=your-project-id
GOOGLE_APPLICATION_CREDENTIALS=./credentials.json
GCP_REGION=us-central1

# =============================================================================
# CLOUD PROVIDER SPECIFIC (AZURE)
# =============================================================================

# Azure Configuration
AZURE_SUBSCRIPTION_ID=
AZURE_TENANT_ID=
AZURE_CLIENT_ID=
AZURE_CLIENT_SECRET=

# =============================================================================
# BACKUP AND DISASTER RECOVERY
# =============================================================================

# Backup Configuration
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_PATH=./backups

# =============================================================================
# COMPLIANCE AND AUDITING
# =============================================================================

# Audit Configuration
AUDIT_ENABLED=false
AUDIT_LOG_PATH=./logs/audit.log
AUDIT_RETENTION_DAYS=90

# Compliance
GDPR_COMPLIANCE=false
HIPAA_COMPLIANCE=false
SOC2_COMPLIANCE=false

# =============================================================================
# CUSTOM CONFIGURATION
# =============================================================================

# Add your custom environment variables below
# CUSTOM_VARIABLE=value