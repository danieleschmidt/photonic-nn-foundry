# Photonic Neural Network Foundry - Environment Configuration
# Copy this file to .env and customize for your environment

# ==============================================================================
# DEVELOPMENT SETTINGS
# ==============================================================================

# Enable debug mode for detailed logging and error traces
PHOTONIC_FOUNDRY_DEBUG=false

# Set logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
PHOTONIC_FOUNDRY_LOG_LEVEL=INFO

# Enable development mode features (hot reload, extended logging)
PHOTONIC_FOUNDRY_DEV_MODE=false

# ==============================================================================
# SIMULATION SETTINGS
# ==============================================================================

# Default Process Design Kit (PDK)
# Options: skywater130, globalfoundries45, asap7, freepdk45
PHOTONIC_FOUNDRY_DEFAULT_PDK=skywater130

# Default operating wavelength in nanometers
PHOTONIC_FOUNDRY_DEFAULT_WAVELENGTH=1550

# Simulation backend for Verilog compilation and analysis
# Options: icarus, verilator, modelsim, vivado
PHOTONIC_FOUNDRY_SIMULATION_BACKEND=icarus

# Default temperature for thermal analysis (Celsius)
PHOTONIC_FOUNDRY_DEFAULT_TEMPERATURE=25

# Process corner for variation analysis
# Options: tt (typical), ss (slow), ff (fast), sf (slow-fast), fs (fast-slow)
PHOTONIC_FOUNDRY_PROCESS_CORNER=tt

# ==============================================================================
# PERFORMANCE SETTINGS
# ==============================================================================

# Maximum number of parallel jobs for simulation and compilation
PHOTONIC_FOUNDRY_MAX_PARALLEL_JOBS=4

# Cache directory for intermediate results and compiled models
PHOTONIC_FOUNDRY_CACHE_DIR=~/.cache/photonic_foundry

# Temporary directory for simulation files
PHOTONIC_FOUNDRY_TEMP_DIR=/tmp/photonic_foundry

# Maximum memory usage for large model processing (MB)
PHOTONIC_FOUNDRY_MAX_MEMORY=4096

# Enable compilation caching to speed up repeated builds
PHOTONIC_FOUNDRY_ENABLE_CACHE=true

# Cache expiration time in hours
PHOTONIC_FOUNDRY_CACHE_EXPIRY=24

# ==============================================================================
# HARDWARE ACCELERATION
# ==============================================================================

# Enable GPU acceleration for PyTorch operations (requires CUDA)
PHOTONIC_FOUNDRY_USE_GPU=false

# Specify which GPU devices to use (empty = all available)
CUDA_VISIBLE_DEVICES=

# Enable mixed precision for faster training/inference
PHOTONIC_FOUNDRY_MIXED_PRECISION=false

# ==============================================================================
# MONITORING & METRICS
# ==============================================================================

# Enable performance metrics collection
PHOTONIC_FOUNDRY_ENABLE_METRICS=true

# Metrics export endpoint (Prometheus format)
PHOTONIC_FOUNDRY_METRICS_ENDPOINT=http://localhost:9090

# Enable telemetry for usage analytics (opt-in)
PHOTONIC_FOUNDRY_ENABLE_TELEMETRY=false

# Custom metrics labels for multi-user environments
PHOTONIC_FOUNDRY_METRICS_LABELS=user:default,environment:development

# ==============================================================================
# CLOUD INTEGRATION (OPTIONAL)
# ==============================================================================

# AWS S3 bucket for model storage and sharing
# PHOTONIC_FOUNDRY_S3_BUCKET=my-photonic-models

# AWS region for S3 and other services
# PHOTONIC_FOUNDRY_AWS_REGION=us-west-2

# Enable cloud-based high-performance computing
# PHOTONIC_FOUNDRY_CLOUD_COMPUTE=false

# Google Cloud Storage bucket (alternative to S3)
# PHOTONIC_FOUNDRY_GCS_BUCKET=my-photonic-models

# Azure Blob Storage container
# PHOTONIC_FOUNDRY_AZURE_CONTAINER=photonic-models

# ==============================================================================
# DATABASE CONFIGURATION (OPTIONAL)
# ==============================================================================

# Database URL for result storage and experiment tracking
# PHOTONIC_FOUNDRY_DATABASE_URL=sqlite:///photonic_foundry.db

# Enable database connection pooling
# PHOTONIC_FOUNDRY_DB_POOL_SIZE=5

# Database connection timeout (seconds)
# PHOTONIC_FOUNDRY_DB_TIMEOUT=30

# ==============================================================================
# API & WEB SERVICE SETTINGS
# ==============================================================================

# API server host and port for web service mode
PHOTONIC_FOUNDRY_API_HOST=0.0.0.0
PHOTONIC_FOUNDRY_API_PORT=8000

# Enable API authentication
PHOTONIC_FOUNDRY_API_AUTH=false

# API rate limiting (requests per minute)
PHOTONIC_FOUNDRY_API_RATE_LIMIT=100

# CORS allowed origins for web frontend
PHOTONIC_FOUNDRY_CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# ==============================================================================
# JUPYTER CONFIGURATION
# ==============================================================================

# Enable Jupyter Lab integration
JUPYTER_ENABLE_LAB=true

# Jupyter server port
JUPYTER_PORT=8888

# Jupyter authentication token (leave empty for no token)
JUPYTER_TOKEN=

# Enable Jupyter extensions
JUPYTER_ENABLE_EXTENSIONS=true

# ==============================================================================
# TESTING & QUALITY ASSURANCE
# ==============================================================================

# Test database URL (separate from production)
PHOTONIC_FOUNDRY_TEST_DATABASE_URL=sqlite:///:memory:

# Enable test coverage reporting
PHOTONIC_FOUNDRY_TEST_COVERAGE=true

# Minimum test coverage threshold (percentage)
PHOTONIC_FOUNDRY_COVERAGE_THRESHOLD=80

# Enable property-based testing with Hypothesis
PHOTONIC_FOUNDRY_PROPERTY_TESTING=true

# ==============================================================================
# SECURITY SETTINGS
# ==============================================================================

# Secret key for session management and encryption
PHOTONIC_FOUNDRY_SECRET_KEY=your-secret-key-change-this-in-production

# Enable security scanning of dependencies
PHOTONIC_FOUNDRY_SECURITY_SCAN=true

# Trust level for external model loading (strict, medium, permissive)
PHOTONIC_FOUNDRY_TRUST_LEVEL=strict

# Enable input validation and sanitization
PHOTONIC_FOUNDRY_VALIDATE_INPUTS=true

# ==============================================================================
# EXPERIMENTAL FEATURES
# ==============================================================================

# Enable experimental quantum-photonic hybrid processing
PHOTONIC_FOUNDRY_QUANTUM_HYBRID=false

# Enable machine learning-guided optimization
PHOTONIC_FOUNDRY_ML_OPTIMIZATION=false

# Enable automatic model architecture search
PHOTONIC_FOUNDRY_AUTO_ARCH_SEARCH=false

# Enable distributed computing with Ray/Dask
PHOTONIC_FOUNDRY_DISTRIBUTED=false

# ==============================================================================
# DEVELOPMENT & DEBUGGING
# ==============================================================================

# Enable profiling for performance analysis
PHOTONIC_FOUNDRY_PROFILING=false

# Profiling output directory
PHOTONIC_FOUNDRY_PROFILE_DIR=./profiles

# Enable memory debugging
PHOTONIC_FOUNDRY_MEMORY_DEBUG=false

# Enable SQL query logging (if using database)
PHOTONIC_FOUNDRY_SQL_DEBUG=false

# Custom Python path for development
# PYTHONPATH=/path/to/your/custom/modules

# ==============================================================================
# INTEGRATION SETTINGS
# ==============================================================================

# MLflow tracking server URI
# MLFLOW_TRACKING_URI=http://localhost:5000

# Weights & Biases project name
# WANDB_PROJECT=photonic-foundry

# TensorBoard log directory
TENSORBOARD_LOG_DIR=./logs/tensorboard

# Enable Git integration for versioning
PHOTONIC_FOUNDRY_GIT_INTEGRATION=true

# ==============================================================================
# NOTIFICATIONS & ALERTS
# ==============================================================================

# Slack webhook URL for notifications
# PHOTONIC_FOUNDRY_SLACK_WEBHOOK=https://hooks.slack.com/services/...

# Email settings for alerts (SMTP)
# PHOTONIC_FOUNDRY_SMTP_HOST=smtp.example.com
# PHOTONIC_FOUNDRY_SMTP_PORT=587
# PHOTONIC_FOUNDRY_SMTP_USER=your-email@example.com
# PHOTONIC_FOUNDRY_SMTP_PASSWORD=your-password

# Discord webhook for community notifications
# PHOTONIC_FOUNDRY_DISCORD_WEBHOOK=https://discord.com/api/webhooks/...

# ==============================================================================
# CUSTOM EXTENSIONS
# ==============================================================================

# Directory for custom PDK definitions
PHOTONIC_FOUNDRY_CUSTOM_PDK_DIR=./custom_pdks

# Directory for custom optimization passes
PHOTONIC_FOUNDRY_CUSTOM_OPT_DIR=./custom_optimizations

# Enable plugin system
PHOTONIC_FOUNDRY_PLUGINS_ENABLED=true

# Plugin discovery paths
PHOTONIC_FOUNDRY_PLUGIN_PATHS=./plugins,~/.photonic_foundry/plugins

# ==============================================================================
# ADVANCED CONFIGURATION
# ==============================================================================

# Custom configuration file path
# PHOTONIC_FOUNDRY_CONFIG_FILE=./config/advanced.yaml

# Enable configuration hot-reloading
PHOTONIC_FOUNDRY_HOT_RELOAD_CONFIG=false

# Override default PDK library paths
# PHOTONIC_FOUNDRY_PDK_LIBRARY_PATH=/custom/pdk/path

# Custom Verilog include paths
# PHOTONIC_FOUNDRY_VERILOG_INCLUDE_PATHS=/custom/includes

# ==============================================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# ==============================================================================

# Current environment (development, staging, production)
PHOTONIC_FOUNDRY_ENVIRONMENT=development

# Feature flags (comma-separated list)
PHOTONIC_FOUNDRY_FEATURE_FLAGS=

# Custom branding and UI settings
PHOTONIC_FOUNDRY_BRAND_NAME="Photonic Foundry"
PHOTONIC_FOUNDRY_BRAND_COLOR="#1f77b4"

# ==============================================================================
# NOTES
# ==============================================================================
# 
# 1. Boolean values: use true/false (lowercase)
# 2. Paths: use absolute paths or paths relative to project root
# 3. URLs: include protocol (http://, https://, file://)
# 4. Lists: use comma-separated values (no spaces around commas)
# 5. Sensitive values: never commit actual secrets to version control
# 6. Environment-specific: create .env.local for local overrides
# 7. Production: use environment variables or secrets management
# 8. Testing: create .env.test for test-specific configuration
#
# For more information, see: docs/configuration.md
# ==============================================================================